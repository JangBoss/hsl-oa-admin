<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
	">
	
	<!-- 启用注解 -->
	<context:annotation-config />
	
	<!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
	<context:component-scan base-package="com.hsl.oa">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">   
    	<property name="dataSource" ref="dataSource"></property>
 	</bean>
 	
 	<!-- 加载Config 配置 -->
 <!-- 	<bean id="configMySqlDB" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
           <property name="locations">
              <list>
                  <value>classpath:config/dbconfig.properties</value>
              </list>
          </property>
    </bean>
	
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
		  <property name="properties" ref="configMySqlDB"/>
	</bean>   -->
	
   <bean id="dataSource" class="com.hsl.oa.common.dbsql.HslDruidDataSource" destroy-method="close">  
         <!-- 数据库基本信息配置 -->
         <property name="url" value="f54827112954b9c469cec3e517c44d60f334465fc457c1bdf4151c10a16edb8b6911cb8f3e6fa900c8c99227a057dc88273e86e3026ee4bf9c91a116523921b9304067a2427f421f006779f275f8e957" />  
         <property name="username" value="c7ab1b7847d2626a" />  
         <property name="password" value="84984650ee85eab84716fa223e05e261" />  
         <property name="driverClassName" value="com.mysql.jdbc.Driver" />  
         <property name="filters" value="stat" />  
   		 <!-- 最大并发连接数 -->
         <property name="maxActive" value="20" />
         <!-- 初始化连接数量 -->
         <property name="initialSize" value="1" />
         <!-- 配置获取连接等待超时的时间 -->
         <property name="maxWait" value="60000" />
         <!-- 最小空闲连接数 -->
         <property name="minIdle" value="10" />  
   		 <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
         <property name="timeBetweenEvictionRunsMillis" value="60000" />
         <!--  配置一个连接在池中最小生存的时间，单位是毫秒 -->
         <property name="minEvictableIdleTimeMillis" value="300000" />  
         <property name="validationQuery" value="SELECT 'x'" />  
         <property name="testWhileIdle" value="true" />  
         <property name="testOnBorrow" value="false" />  
         <property name="testOnReturn" value="false" />  
         <property name="maxOpenPreparedStatements" value="20" />
         <!--  打开removeAbandoned功能 -->
         <property name="removeAbandoned" value="true" />
         <!-- 1800秒，也就是30分钟 -->
         <property name="removeAbandonedTimeout" value="1800" />
         <!--  关闭abanded连接时输出错误日志   --> 
         <property name="logAbandoned" value="true" />
	</bean>  
	
	<!-- 阿里 druid数据库连接池 -->
    <!-- <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">  
         数据库基本信息配置   
         <property name="url" value="${url}" />  
         <property name="username" value="${username}" />  
         <property name="password" value="${password}" />  
         <property name="driverClassName" value="${driverClassName}" />  
         <property name="filters" value="${filters}" />  
   		最大并发连接数   
         <property name="maxActive" value="${maxActive}" />
         初始化连接数量   
         <property name="initialSize" value="${initialSize}" />
        配置获取连接等待超时的时间   
         <property name="maxWait" value="${maxWait}" />
         最小空闲连接数   
         <property name="minIdle" value="${minIdle}" />  
   		 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒   
         <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
        配置一个连接在池中最小生存的时间，单位是毫秒   
         <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />  
         <property name="validationQuery" value="${validationQuery}" />  
         <property name="testWhileIdle" value="${testWhileIdle}" />  
         <property name="testOnBorrow" value="${testOnBorrow}" />  
         <property name="testOnReturn" value="${testOnReturn}" />  
         <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
         打开removeAbandoned功能   
         <property name="removeAbandoned" value="${removeAbandoned}" />
         1800秒，也就是30分钟   
         <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
        关闭abanded连接时输出错误日志     
         <property name="logAbandoned" value="${logAbandoned}" />
	</bean>    -->
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- 事物处理 -->
    <aop:config>
		<aop:pointcut id="pc" expression="execution(* com.hsl.service..*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
	</aop:config> 
	
	<!-- 事务注解管理 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" />
	<aop:aspectj-autoproxy/> -->
	
	<!-- 配置mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml"></property> 
        <!-- mapper扫描 -->
        <property name="mapperLocations" value="classpath:com/hsl/oa/mapper/*/*/*.xml"></property>
    </bean>
    
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<!-- ================ Shiro start ================ -->
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
			<property name="realm" ref="ShiroRealm" />
		</bean>
		
		<!-- 項目自定义的Realm -->
	    <bean id="ShiroRealm" class="com.hsl.oa.common.interceptor.shiro.ShiroRealm" ></bean>
		
		<!-- Shiro Filter -->
		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
			<property name="securityManager" ref="securityManager" />
			
			<property name="loginUrl" value="/" />
			
			<property name="successUrl" value="/main/index" />
			
			<property name="unauthorizedUrl" value="/login_toLogin" />
			
			<property name="filterChainDefinitions">
				<value>
				/static/login/** 			= anon
				/static/js/myjs/** 			= authc
				/static/js/** 				= anon
				/uploadFiles/uploadImgs/** 	= anon
	           	/code.do 					= anon
	           	/login_login	 			= anon
	           	/app**/** 					= anon
	           	/weixin/** 					= anon
	           	/**							= authc
				</value>
			</property>
		</bean>
	<!-- ================ Shiro end ================ -->
	
   
</beans>
